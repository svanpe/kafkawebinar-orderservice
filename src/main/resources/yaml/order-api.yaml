openapi: 3.0.1
info:
  title: Swagger WebShop Order API
  description: 'This is a sample API for handling orders in a webshop.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
- name: order
  description: this API allows to register an order, change the status of an order and retrieve order(s).
  externalDocs:
    description: Find out more
    url: http://swagger.io

paths:
  /order:
    post:
      tags:
      - order
      summary: Add a new order
      operationId: addOrder
      requestBody:
        description: Order object that needs to be added 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /order/findByStatus:
    get:
      tags:
      - order
      summary: Finds Orders by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findOrdersByStatus
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - placed
            - payed
            - shipped
            - delivered
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        400:
          description: Invalid status value
          content: {}
  /order/findByCustomer:
    get:
      tags:
      - order
      summary: Finds Orders by customer
      description: give the customer reference.
      operationId: findOrderPerCustomer
      parameters:
      - name: customerRef
        in: query
        description: Customer reference to filter by
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        400:
          description: Invalid tag value
          content: {}

  /order/{orderId}:
    patch:
      tags:
      - order
      summary: Update the status of an existing order
      operationId: updateOrderStatus
      parameters:
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Order object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForPatch'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Order not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body

    get:
      tags:
      - order
      summary: Find order by ID
      description: Returns a single order
      operationId: getOrderById
      parameters:
      - name: orderId
        in: path
        description: ID of order to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
  


components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date
        customer:
          $ref: '#/components/schemas/Customer'
        status:
          type: string
          description: Order Status
          enum:
          - placed
          - payed
          - shipped
          - delivered
        orderItems:
          type: array
          items: 
              $ref: '#/components/schemas/OrderItem'

    OrderForPatch:
      type: object
      properties:
        status:
          type: string
          description: Order Status
          enum:
          - placed
          - payed
          - shipped
          - delivered


    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int32
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
 
 
 
